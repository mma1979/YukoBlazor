@inject ApiClient API
@inject AppState State

<div id='header-wrapper'>
    <div class='header section' id='header'>
        <div class='widget Header' data-version='1' id='Header1'>
            <div id='header-inner'>
                <div class='titlewrapper'>
                    <h1 class='title'>
                        <a href='/'>@title<span class='dot'>.</span></a>
                    </h1>
                </div>
                <div class='descriptionwrapper'>
                    <p class='description'><span>@subtitle</span></p>
                </div>
            </div>
        </div>
    </div>
    <!--Main Menu-->
    <div class='menu-secondary-container'>
        <ul class='menus menu-secondary'>
            @if (catalogs != null)
            {
                <li><a href="/">Home</a></li>
                @foreach (var x in catalogs)
                {
                    <li><a href="/catalog/@x.Id">@x.Display</a></li>
                }
            }
        </ul>
    </div>
</div>

@functions {
    string title;
    string subtitle;
    IEnumerable<CatalogViewModel> catalogs;

    protected override async Task OnInitAsync()
    {
        var profile = await API.GetProfileAsync();
        title = profile.BlogTitle;
        subtitle = profile.Subtitle;
        catalogs = await API.GetCatalogsAsync();
        State.OnStateChanged += () => { StateHasChanged(); };
        State.OnCatalogUpdated += async () =>
        {
            catalogs = await API.GetCatalogsAsync();
            StateHasChanged();
        };
    }
}