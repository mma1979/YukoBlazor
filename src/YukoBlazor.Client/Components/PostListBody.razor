@inject ApiClient API
@inject IJSRuntime JsRuntime

@if (posts != null)
{
    <div id="main-wrapper">
        <div class="main section" id="main">
            <div class="widget Blog" data-version="1" id="Blog1">
                <div class="blog-posts hfeed">
                    @foreach (var x in posts)
                    {
                        <PostMainBody PostModel="@x" ShowReadMore="true" />
                    }
                </div>
                <div class="blog-pager" id="blog-pager">
                    <div class="showpageArea">
                        <span style="COLOR: #000;" class="showpageOf"> Pages (@totalPages)</span>
                        @for (var i = 1; i <= totalPages; ++i)
                        {
                            if (p == i)
                            {
                                <span class="showpagePoint">@i</span>
                            }
                            else
                            {
                                <span class="showpageNum">
                                    <a href="@BuildLink(i)">@i</a>
                                </span>
                            }
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@functions
{
    IEnumerable<PostViewModel> posts;

    int totalPages = 1;

    [Parameter] int p { get; set; } = 1;

    [Parameter] int? year { get; set; }

    [Parameter] int? month { get; set; }

    [Parameter] string catalog { get; set; }

    [Parameter] string tag { get; set; }

    [Parameter] string search { get; set; }

    private string BuildLink(int page)
    {
        string link;
        if (year.HasValue && month.HasValue)
        {
            link = $"/year/{year.Value}/month/{month.Value}";
        }
        else if (!string.IsNullOrEmpty(catalog))
        {
            link = $"/catalog/{catalog}";
        }
        else if (!string.IsNullOrEmpty(tag))
        {
            link = $"/tag/{tag}";
        }
        else
        {
            link = "";
        }

        if (page > 0)
        {
            link = link + $"/p/{page}";
        }

        return link;
    }

    protected override async Task OnParametersSetAsync()
    {
        var result = await API.GetPostListAsync(
            catalog, tag, year, month, search, false, p);
        posts = result.Data;
        totalPages = result.TotalPage;
    }

    protected override async Task OnInitAsync()
    {
        await OnParametersSetAsync();
    }

    protected override async Task OnAfterRenderAsync()
    {
        await HighlightAsync();
    }

    private async Task HighlightAsync()
    {
        await JsRuntime.InvokeAsync<object>("Highlight");
    }
}